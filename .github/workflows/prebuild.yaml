# Triggering prebuilds:
# 1. Create a draft release manually using the GitHub UI.
# 2. Set the `jobs.*.strategy.matrix.node` arrays to the set of Node.js versions
#    to build for.
# 3. Set the `jobs.*.strategy.matrix.canvas_tag` arrays to the set of Canvas
#    tags to build. (Usually this is a single tag, but can be an array when a
#    new version of Node.js is released and older versions of Canvas need to be
#    built.)
# 4. Commit and push this file to master.
# 5. In the Actions tab, navigate to the "Make Prebuilds" workflow and click
#    "Run workflow".
# 6. Once the builds succeed, promote the draft release to a full release.

name: Make Prebuilds
on: workflow_dispatch

# UPLOAD_TO can be specified to upload the release assets under a different tag
# name (e.g. for testing). If omitted, the assets are published under the same
# release tag as the canvas version being built.
# env:
#   UPLOAD_TO: "v0.0.1"

jobs:
  Win:
    strategy:
      matrix:
        node: [8, 9, 10, 11, 12, 13, 14, 16, 18]
    name: Node.js ${{ matrix.node }}, Windows
    runs-on: windows-latest

    steps:
      # TODO drop when https://github.com/actions/virtual-environments/pull/632 lands
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          path-type: inherit

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/checkout@v2

      - name: Build
        run: |
          npm install -g node-gyp
          npm install --ignore-scripts
          msys2do . prebuild/Windows/preinstall.sh
          msys2do cp prebuild/Windows/binding.gyp binding.gyp
          msys2do node-gyp configure
          msys2do node-gyp rebuild -j 2

      - name: Bundle
        run: msys2do . prebuild/Windows/bundle.sh

      - name: Test binary
        # By not running in msys2, this doesn't have access to the msys2 libs
        run: npm test

      - name: Make asset
        id: make_bundle
        # I can't figure out why this isn't an env var already. It shows up with `env`.
        run: msys2do UPLOAD_TO=${{ env.UPLOAD_TO }} CANVAS_VERSION_TO_BUILD=${{ env.CANVAS_VERSION_TO_BUILD}} . prebuild/tarball.sh
